.TH PASS 1 "2012 Sept 24" ZX2C4 "Password Store"

.SH NAME
pass - stores, retrieves, generates, and synchronizes passwords securely

.SH SYNOPSIS
.B pass
[ 
.I COMMAND
] [ 
.I OPTIONS
]... [ 
.I ARGS
]...

.SH DESCRIPTION

.B pass 
is a very simple password store that keeps passwords inside 
.BR gpg (1)
encrypted files inside a simple directory tree residing at 
.IR ~/.password-store .
The
.B pass
utility provides a series of commands for manipulating the password store,
allowing the user to add, remove, edit, synchronize, generate, and manipulate
passwords.

If no COMMAND is specified, COMMAND defaults to either
.B show
or
.BR ls ,
depending on the type of specifier in ARGS. Otherwise COMMAND must be one of
the valid commands listed below.

The \fBinit\fP command must be run before other commands in order to initialize
the password store with the correct gpg key id. Passwords are encrypting using
the gpg key set with \fBinit\fP.

There is a corresponding bash completion script for use with tab completing
password names in
.BR bash (1).

.SH COMMANDS

.TP
\fBinit\fP [ \fI--reencrypt\fP, \fI-e\fP ] \fIgpg-id\fP
Initialize new password storage and use
.I gpg-id
for encryption. This command must be run first before a password store can be
used. If \fI--reencrypt\fP or \fI-e\fP is specified, reencrypt all existing
passwords in the password store using \fIgpg-id\fP. Note that use of
.BR gpg-agent (1)
is recommended so that the batch decryption does not require as much user
intervention.
.TP
\fBls\fP \fIsubfolder\fP
List names of passwords inside the tree at
.I subfolder
by using the
.BR tree (1)
program. This command is alternatively named \fBlist\fP.
.TP
\fBshow\fP \fIpass-name\fP
Decrypt and print a password named \fIpass-name\fP.
.TP
\fBinsert\fP [ \fI--no-echo\fP, \fI-n\fP | \fI--multiline\fP, \fI-m\fP ] [ \fI--force\fP, \fI-f\fP ] \fIpass-name\fP
Insert a new password into the password store called \fIpass-name\fP. This will
read the new password from standard in. If \fI--no-echo\fP or \fI-n\fP is specified, do
disable keyboard echo when the password is entered and confirm the password by asking
for it twice. If \fI--multiline\fP or \fI-m\fP is specified, lines will be read until
EOF or Ctrl+D is reached. Otherwise, only a single line from standard in is read. Prompt
before overwriting an existing password, unless \fI--force\fP or \fI-f\fP is specified.
.TP
\fBedit\fP \fIpass-name\fP
Insert a new password or edit an existing password using the default text editor specified
by the environment variable \fIEDITOR\fP or using
.BR vi (1)
as a fallback. This mode makes use of temporary files for editing, but care is taken to
ensure that temporary files are created in \fI/dev/shm\fP in order to avoid writing to
difficult-to-erase disk sectors. If \fI/dev/shm\fP is not accessible, fallback to
the ordinary \fITMPDIR\fP location, and print a warning.
.TP
\fBgenerate\fP [ \fI--no-symbols\fP, \fI-n\fP ] [ \fI--force\fP, \fI-f\fP ] \fIpass-name pass-length\fP
Generate a new password using
.BR pwgen (1)
of length \fIpass-length\fP and insert into \fIpass-name\fP. If \fI--no-symbols\fP or \fI-n\fP
is specified, do not use any non-alphanumeric characters in the generated password.
Prompt before overwriting an existing password,
unless \fI--force\fP or \fI-f\fP is specified.
.TP
\fBrm\fP [ \fI--recursive\fP, \fI-r\fP ] [ \fI--force\fP, \fI-f\fP ] \fIpass-name\fP
Remove the password named \fIpass-name\fP from the password store. This command is
alternatively named \fBremove\fP or \fBdelete\fP. If \fI--recursive\fP or \fI-r\fP
is specified, delete pass-name recursively if it is a directory. If \fI--force\fP
or \fI-f\fP is specified, do not interactively prompt before removal.
.TP
\fBhelp\fP
Show usage message.
.TP
\fBversion\fP
Show version information.

.SH SIMPLE EXAMPLES

.TP
Initialize password store
.B zx2c4@laptop ~ $ pass init Jason@zx2c4.com 
.br
mkdir: created directory \[u2018]/home/zx2c4/.password-store\[u2019] 
.br
Password store initialized for Jason@zx2c4.com.
.TP
List existing passwords in store
.B zx2c4@laptop ~ $ pass 
.br
Password Store
.br
\[u251C]\[u2500]\[u2500] Business 
.br
\[u2502]   \[u251C]\[u2500]\[u2500] some-silly-business-site.com 
.br
\[u2502]   \[u2514]\[u2500]\[u2500] another-business-site.net 
.br
\[u251C]\[u2500]\[u2500] Email 
.br
\[u2502]   \[u251C]\[u2500]\[u2500] donenfeld.com 
.br
\[u2502]   \[u2514]\[u2500]\[u2500] zx2c4.com 
.br
\[u2514]\[u2500]\[u2500] France 
.br
    \[u251C]\[u2500]\[u2500] bank 
.br
    \[u251C]\[u2500]\[u2500] freebox 
.br
    \[u2514]\[u2500]\[u2500] mobilephone  
.br

.br
Alternatively, "\fBpass ls\fP".
.TP
Show existing password
.B zx2c4@laptop ~ $ pass Email/zx2c4.com 
.br
sup3rh4x3rizmynam3 
.TP
Add password to store
.B zx2c4@laptop ~ $ pass insert Business/cheese-whiz-factory 
.br
Enter password for Business/cheese-whiz-factory: omg so much cheese what am i gonna do
.TP
Add multiline password to store 
.B zx2c4@laptop ~ $ pass insert -m Business/cheese-whiz-factory 
.br
Enter contents of Business/cheese-whiz-factory and press Ctrl+D when finished: 
.br
 
.br
Hey this is my 
.br
awesome 
.br
multi 
.br
line 
.br
passworrrrrrrrd. 
.br
^D 
.TP
Generate new password
.B zx2c4@laptop ~ $ pass generate Email/jasondonenfeld.com 15 
.br
The generated password to Email/jasondonenfeld.com is: 
.br
$(-QF&Q=IN2nFBx
.TP
Generate new alphanumeric password
.B zx2c4@laptop ~ $ pass -n generate Email/jasondonenfeld.com 12
.br
The generated password to Email/jasondonenfeld.com is: 
.br
YqFsMkBeO6di
.TP
Generate new password
.B zx2c4@laptop ~ $ pass generate Email/jasondonenfeld.com 19
.TP
Remove password from store
.B zx2c4@laptop ~ $ pass remove Business/cheese-whiz-factory 
.br
rm: remove regular file \[u2018]/home/zx2c4/.password-store/Business/cheese-whiz-factory.gpg\[u2019]? y 
.br
removed \[u2018]/home/zx2c4/.password-store/Business/cheese-whiz-factory.gpg\[u2019]

.SH FILES

.TP
.B ~/.password-store
The default password storage directory.
.TP
.B ~/.password-store/.gpg-id
Contains the default gpg key identification used for encryption and decryption.
This should be set using the \fBinit\fP command.

.SH ENVIRONMENT VARIABLES

.TP
.I PASSWORD_STORE_DIR
Overrides the default password storage directory.
.TP
.I PASSWORD_STORE_KEY
Overrides the default gpg key identification set by \fBinit\fP.
.TP
.I EDITOR
The location of the text editor used by \fBedit\fP.

.SH SEE ALSO
.BR gpg (1),
.BR pwgen (1),

.SH AUTHOR
.B pass
was written by
.MT Jason@zx2c4.com
Jason A. Donenfeld
.ME .
For updates and more information, a project page is available on the
.UR http://\:zx2c4.com/\:projects/\:password-store
World Wide Web
.UE .

.SH COPYING
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
